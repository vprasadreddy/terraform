# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: SSH@0
  inputs:
    runOptions: 'inline'
    inline: 'ls'
    readyTimeout: '20000'
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'



- task: TerraformTaskV4@4
  displayName: init

  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-storage-account'
    backendServiceArm: 'Pay-As-You-Go (91a7faa1-dc40-4598-ac09-d72f572c347a)'
    backendAzureRmResourceGroupName: 'terraform-pipeline-rg'
    backendAzureRmStorageAccountName: 'tfstatestorage9999'
    backendAzureRmContainerName: 'terraformstate'
    backendAzureRmKey: 'dev.terraform.tfstate'

- task: TerraformTaskV4@4
  displayName: plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'Pay-As-You-Go (91a7faa1-dc40-4598-ac09-d72f572c347a)'
  
- task: TerraformTaskV4@4
  displayName: validate
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV4@4
  displayName: apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '--auto-approve'
    environmentServiceNameAzureRM: 'Pay-As-You-Go (91a7faa1-dc40-4598-ac09-d72f572c347a)'